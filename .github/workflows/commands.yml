# This is a basic workflow to help you get started with Actions

name: Commands triggered by typing PR comment

# Controls when the action will run. 
on:
  issue_comment:
    types: [created]

jobs:
  time:
    name: Time how fast the script executes the test folder
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '!time' }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - run: |
          echo Comment message:
          echo ${{ github.event.comment.body }}
      - name: Run the script 30 times
        id: run-30-times
        run: |
          START=`date +%s`
          for i in {1..30} ; do
            # TODO: Change this to actually run
            python3 google_photos_takeout_helper/__main__.py --version
          done
          END=`date +%s`
          RUNTIME=$((END-START)) 
          echo "::set-output name=seconds::$RUNTIME"
      - name: Prepare message
        id: prepare-message
        run: |
          FULL_TIME=${{ steps.run-30-times.outputs.seconds }}
          ONE_TIME=$(bc -l <<< "scale=3; $FULL_TIME/30")
          echo "## :timer_clock:" > comment.md
          echo "30 times $FULL_TIME seconds" >> comment.md
          echo "1 time:  $ONE_TIME seconds" >> comment.md
          echo "::set-output name=message::$(cat comment.md)"
      - name: Comment the time on PR
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.prepare-message.outputs.message }}
            })
