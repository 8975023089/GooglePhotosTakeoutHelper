name: Build and publish new release on version tag
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  make-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get clean tag name
        id: clean_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"
      - name: Get changelog
        run: python scripts/get_changelog.py --version ${{ steps.clean_tag.outputs.tag }} > ./body-file.txt
      #        Just in case changelogs won't work out
      #      - name: Get tag message
      #        id: tag_message
      #        run: echo ::set-output name=message::$(git tag -l --format='%(contents)' ${{ github.ref }})
      - name: Create GH-Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./body-file.txt
          fail_on_unmatched_files: true

  build:
    needs: make-release
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Get clean tag name
        id: clean_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - name: Build exe
        run: dart compile exe bin/gpth.dart -o ./gpth-${{ steps.clean_tag.outputs.tag }}-${{ runner.os }}.exe
      - name: Code sign a windoza exe file
        if: matrix.os == 'windows-latest'
        uses: dlemstra/code-sign-action@v1
        with:
          # Note: this is a self-signed certificate that i generated on my computer
          # This is worthless i think, since windoza still get angry, but best i can do,
          # because proper certificates cost money (a lot :/ )
          certificate: ${{ secrets.WINDOZA_CERT_BASE64 }}
          password: ${{ secrets.WINDOZA_CERT_PASSWORD }}
          folder: '.'
      - name: Add files to GH-Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./gpth-${{ steps.clean_tag.outputs.tag }}-${{ runner.os }}.exe
          fail_on_unmatched_files: true
      # if linux, upload to aur
      - name: Generate PKGBUILD
        if: matrix.os == 'ubuntu-latest'
        run: ./scripts/gen-pkgbuild.bash ./gpth-${{ steps.clean_tag.outputs.tag }}-${{ runner.os }}.exe > ./PKGBUILD
      - name: Upload to AUR
        if: matrix.os == 'ubuntu-latest'
        uses: KSXGitHub/github-actions-deploy-aur@v2
        with:
          pkgname: gpth-bin
          pkgbuild: ./PKGBUILD
          commit_username: 'TheLastGimbus'
          commit_email: 'mateusz.soszynski@tuta.io'
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: ${{ steps.clean_tag.outputs.tag }}
          test: true
